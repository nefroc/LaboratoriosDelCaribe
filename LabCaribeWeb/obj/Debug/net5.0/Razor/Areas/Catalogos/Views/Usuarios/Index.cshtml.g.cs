#pragma checksum "/Users/neftalirodriguez/Projects/LaboratoriosDelCaribe/LabCaribeWeb/Areas/Catalogos/Views/Usuarios/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b8d3805e59052d4e0c2d2d27273ba675ecd6f97c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Catalogos_Views_Usuarios_Index), @"mvc.1.0.view", @"/Areas/Catalogos/Views/Usuarios/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b8d3805e59052d4e0c2d2d27273ba675ecd6f97c", @"/Areas/Catalogos/Views/Usuarios/Index.cshtml")]
    public class Areas_Catalogos_Views_Usuarios_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "/Users/neftalirodriguez/Projects/LaboratoriosDelCaribe/LabCaribeWeb/Areas/Catalogos/Views/Usuarios/Index.cshtml"
  
    ViewData["Title"] = "Usuarios";
    Layout = "~/Views/Shared/_Layout.cshtml";


#line default
#line hidden
#nullable disable
            WriteLiteral("<div id=\"Usuarios\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <h4 class=\"card-title text-center\">");
#nullable restore
#line 11 "/Users/neftalirodriguez/Projects/LaboratoriosDelCaribe/LabCaribeWeb/Areas/Catalogos/Views/Usuarios/Index.cshtml"
                                                  Write(ViewData["Title"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</h4>
                    <div class=""row"">
                        <div class=""col-lg-12"">
                            <div class=""table-responsive"">
                                <table class=""table table-hover"">
                                    <thead>
                                        <tr>
                                            <th>NOMBRE</th>
                                            <th>APELLIDOS</th>
                                            <th>CORREO</th>
                                            <th>ACTIVO</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr v-for=""item in listaUsuarios"">
                                            <td>{{item.nombre}}</td>
                                            <td>{{item.apellidos}}</td>
                                            <td>{{item.correo}}</td>
                                            <td>{{item.");
            WriteLiteral(@"activo | activo}}</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        var app = new Vue({
            el: '#Usuarios',
            data: {
                listaUsuarios: [],
                mensaje: 'Hola View'
            },
            methods: {
                obtenerListaUsuarios: function () {
                    axios.get('");
#nullable restore
#line 52 "/Users/neftalirodriguez/Projects/LaboratoriosDelCaribe/LabCaribeWeb/Areas/Catalogos/Views/Usuarios/Index.cshtml"
                          Write(Url.Action("GetListaUsuarios", "Usuarios"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"').then(response => {
                        console.log(response.data)
                        this.listaUsuarios = response.data;
                    }).catch(e => {
                        this.$message.error('No se han podido cargar los Usuarios.');
                    });
                }
            },
            mounted: function () {
                this.obtenerListaUsuarios()
            }
        });
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
