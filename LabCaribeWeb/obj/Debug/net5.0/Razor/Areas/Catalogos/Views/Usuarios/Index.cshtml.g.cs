#pragma checksum "/Users/neftalirodriguez/Projects/LaboratoriosDelCaribe/LabCaribeWeb/Areas/Catalogos/Views/Usuarios/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e12c91a5190b025f077c113ed86ab342d60676dc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Catalogos_Views_Usuarios_Index), @"mvc.1.0.view", @"/Areas/Catalogos/Views/Usuarios/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e12c91a5190b025f077c113ed86ab342d60676dc", @"/Areas/Catalogos/Views/Usuarios/Index.cshtml")]
    public class Areas_Catalogos_Views_Usuarios_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "/Users/neftalirodriguez/Projects/LaboratoriosDelCaribe/LabCaribeWeb/Areas/Catalogos/Views/Usuarios/Index.cshtml"
  
    ViewData["Title"] = "Usuarios";
    Layout = "~/Views/Shared/_Layout.cshtml";


#line default
#line hidden
#nullable disable
            WriteLiteral("<!-- Encabezado -->\n<!-- ============================================================== -->\n<div class=\"row page-titles\">\n    <div class=\"col-md-5 align-self-center\">\n        <h3 class=\"text-themecolor\">");
#nullable restore
#line 10 "/Users/neftalirodriguez/Projects/LaboratoriosDelCaribe/LabCaribeWeb/Areas/Catalogos/Views/Usuarios/Index.cshtml"
                               Write(ViewData["Title"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</h3>
        <ol class=""breadcrumb"">
            <li class=""breadcrumb-item""><a href=""javascript:void(0)"">Home</a></li>
            <li class=""breadcrumb-item"">Catálogos</li>
            <li class=""breadcrumb-item active"">Usuarios</li>
        </ol>
    </div>
    <div class=""col-md-7 align-self-center text-right"">
        
    </div>
</div>
<!-- ============================================================== -->
<!-- End Bread crumb and right sidebar toggle -->
<div id=""Usuarios"">
    <div class=""row"">
        <div class=""col-lg-12"">
            <div class=""card"">
                <div class=""card-body"">
                    <div class=""row"">
                        <div class=""col-lg-12"">
                            <button type=""button"" class=""btn btn-info btn-sm"" ");
            WriteLiteral(@"@click=""dialogNuevoUsuario = true""><i class=""fa fa-plus-circle""></i>Nuevo Usuario</button>
                            <div class=""table-responsive"">
                                <table class=""table table-hover"">
                                    <thead>
                                        <tr>
                                            <th>NOMBRE</th>
                                            <th>APELLIDOS</th>
                                            <th>CORREO</th>
                                            <th>PERFIL</th>
                                            <th>ACTIVO</th>
                                            <th>ACCIONES</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr v-for=""item in listaUsuarios"">
                                            <td>{{item.nombre}}</td>
                                            <td>{{item.apellidos}}</td>
   ");
            WriteLiteral(@"                                         <td>{{item.correo}}</td>
                                            <td>{{item.perfil}}</td>
                                            <td>{{item.activo | activo}}</td>
                                            <td nowrap>
                                                <button type=""button"" class=""btn waves-effect waves-light btn-outline-info btn-sm"">Editar</button>
                                                <button type=""button"" class=""btn waves-effect waves-light btn-outline-danger btn-sm"" ");
            WriteLiteral(@"@click=""btnEliminarUsuario_click(item.id)"">Eliminar</button>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

");
            WriteLiteral(@"    <el-dialog title=""Nuevo Usuario"" :visible.sync=""dialogNuevoUsuario"">
        <el-form :model=""nuevoUsuario"" ref=""nuevoUsuario"" :rules=""rulesUsuario"">
            <div class=""row form-group"">
                <div class=""col-lg-6"">
                    <label>Correo</label>
                    <el-form-item prop=""correo"">
                        <el-input v-model=""nuevoUsuario.correo""></el-input>
                    </el-form-item>
                </div>
                <div class=""col-lg-6"">
                    <label>Contraseña</label>
                    <el-form-item prop=""contrasena"">
                        <el-input v-model=""nuevoUsuario.contrasena""></el-input>
                    </el-form-item>
                </div>
            </div>
            <div class=""row form-group"">
                <div class=""col-lg-6"">
                    <label>Nombre</label>
                    <el-form-item prop=""nombre"">
                        <el-input v-model=""nuevoUsuario.nombre""></el-input>
                    <");
            WriteLiteral(@"/el-form-item>
                </div>
                <div class=""col-lg-6"">
                    <label>Apellidos</label>
                    <el-form-item prop=""apellidos"">
                        <el-input v-model=""nuevoUsuario.apellidos""></el-input>
                    </el-form-item>
                </div>
            </div>
            <div class=""row form-group"">
                <div class=""col-lg-6"">
                    <el-form-item label=""Activo"" prop=""activo"">
                        <el-switch v-model=""nuevoUsuario.activo""></el-switch>
                    </el-form-item>
                </div>
                <div class=""col-lg-6"">
                    <label>Apellidos</label>
                    <el-form-item prop=""idPerfil"">
                        <el-select v-model=""nuevoUsuario.idPerfil"" placeholder=""please select your zone"">
                            <el-option label=""Administrador"" value=""1""></el-option>
                        </el-select>
                    </el-form-item>
              ");
            WriteLiteral("  </div>\n            </div>\n        </el-form>\n        <span slot=\"footer\" class=\"dialog-footer\">\n            <el-button ");
            WriteLiteral("@click=\"dialogNuevoUsuario = false\">Cancelar</el-button>\n            <el-button type=\"primary\" ");
            WriteLiteral("@click=\"btnNuevoUsuario_click\">Guardar</el-button>\n        </span>\n    </el-dialog>\n</div>\n\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        var app = new Vue({
            el: '#Usuarios',
            data: {
                listaUsuarios: [],
                dialogNuevoUsuario: false,
                nuevoUsuario: {
                    id: null,
                    correo: null,
                    contrasena: null,
                    nombre: null,
                    apellidos: null,
                    activo: true,
                    creadoPor: 0,
                    idPerfil: 1
                },
                rulesUsuario: {
                    correo: { required: true, message: 'El correo es requerido.', trigger: 'blur' },
                    contrasena: { required: true, message: 'La contraseña es requerida', trigger: 'blur' },
                    nombre: { required: true, message: 'El nombre es requerido.', trigger: 'blur' },
                    apellidos: { required: true, message: 'Los apellidos son requeridos', trigger: 'blur' }
                }
            },
            methods: {
                obtenerLi");
                WriteLiteral("staUsuarios: function () {\n                    axios.get(\'");
#nullable restore
#line 145 "/Users/neftalirodriguez/Projects/LaboratoriosDelCaribe/LabCaribeWeb/Areas/Catalogos/Views/Usuarios/Index.cshtml"
                          Write(Url.Action("GetListaUsuarios", "Usuarios"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"').then(response => {
                        console.log(response.data)
                        this.listaUsuarios = response.data;
                    }).catch(e => {
                        this.$message.error('No se han podido cargar los Usuarios.');
                    });
                },
                btnEliminarUsuario_click: function (idUsuario) {
                    this.$confirm('El usuario ' + item.nombre + ' ' + item.apellidos + ' se eliminará permanentemente. ¿Desea continuar?', 'Confirmar', {
                        confirmButtonText: 'Si',
                        cancelButtonText: 'No',
                        type: 'warning'
                    }).then(() => {
                        try {
                            axios.post('");
#nullable restore
#line 159 "/Users/neftalirodriguez/Projects/LaboratoriosDelCaribe/LabCaribeWeb/Areas/Catalogos/Views/Usuarios/Index.cshtml"
                                   Write(Url.Action("SetEliminarUsuario", "Usuarios"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"?idUsuario=' + idUsuario).then(response => {
                                console.log(response.data)
                                if (response.data === true) {
                                    this.obtenerListaUsuarios()

                                    this.$message({
                                        type: 'success',
                                        message: 'El usuario ' + item.nombre + ' ' + item.apellidos + ' se ha eliminado'
                                    });
                                } else {
                                    this.$message.error(response.data);
                                }
                            }).catch(e => {
                                this.$message.error('Error al crear el usuario.');
                            });
                        } catch (error) {
                            this.$message.error(error);
                        }
                    }).catch(() => {
                        this.$message({
                ");
                WriteLiteral(@"            type: 'info',
                            message: 'Proceso cancelado.'
                        });
                    });
                },
                btnNuevoUsuario_click: function () {
                    this.$refs['nuevoUsuario'].validate((valid) => {
                        if (valid) {
                            try {
                                axios.post('");
#nullable restore
#line 188 "/Users/neftalirodriguez/Projects/LaboratoriosDelCaribe/LabCaribeWeb/Areas/Catalogos/Views/Usuarios/Index.cshtml"
                                       Write(Url.Action("SetNuevoUsuario", "Usuarios"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"', this.nuevoUsuario).then(response => {
                                    console.log(response.data)
                                    if (response.data === 'ok') {
                                        this.dialogNuevoUsuario = false
                                        this.obtenerListaUsuarios()

                                        this.$message.success('El usuario se ha creado.');
                                    } else {
                                        this.$message.error(response.data);
                                    }
                                }).catch(e => {
                                    this.$message.error('Error al crear el usuario.');
                                });
                            } catch (error) {
                                this.$message.error(error);
                            }
                        } else {
                            console.log('Error de validacion')
                            return false;
                  ");
                WriteLiteral("      }\n                    });\n                }\n            },\n            mounted: function () {\n                this.obtenerListaUsuarios()\n            }\n        });\n    </script>\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
