#pragma checksum "/Users/neftalirodriguez/Projects/LaboratoriosDelCaribe/LabCaribeWeb/Areas/Catalogos/Views/Clientes/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4b42e0e82d8e28d67636f146beb7c2291ceb07e8"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Catalogos_Views_Clientes_Index), @"mvc.1.0.view", @"/Areas/Catalogos/Views/Clientes/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4b42e0e82d8e28d67636f146beb7c2291ceb07e8", @"/Areas/Catalogos/Views/Clientes/Index.cshtml")]
    public class Areas_Catalogos_Views_Clientes_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "/Users/neftalirodriguez/Projects/LaboratoriosDelCaribe/LabCaribeWeb/Areas/Catalogos/Views/Clientes/Index.cshtml"
  
    ViewData["Title"] = "Clientes";
    Layout = "~/Views/Shared/_Layout.cshtml";


#line default
#line hidden
#nullable disable
            WriteLiteral("\n<!-- Encabezado -->\n<!-- ============================================================== -->\n<div class=\"row page-titles\">\n    <div class=\"col-md-5 align-self-center\">\n        <h3 class=\"text-themecolor\">");
#nullable restore
#line 11 "/Users/neftalirodriguez/Projects/LaboratoriosDelCaribe/LabCaribeWeb/Areas/Catalogos/Views/Clientes/Index.cshtml"
                               Write(ViewData["Title"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</h3>
        <ol class=""breadcrumb"">
            <li class=""breadcrumb-item""><a href=""javascript:void(0)"">Home</a></li>
            <li class=""breadcrumb-item"">Catálogos</li>
            <li class=""breadcrumb-item active"">Clientes</li>
        </ol>
    </div>
    <div class=""col-md-7 align-self-center text-right"">

    </div>
</div>
<!-- ============================================================== -->
<div id=""Clientes"">
    <div class=""row"">
        <div class=""col-lg-12"">
            <div class=""card"">
                <div class=""card-body"">
                    <div class=""row"">
                        <div class=""col-lg-12 text-right"">
                            <button type=""button"" class=""btn btn-info btn-sm"" ");
            WriteLiteral(@"@click=""btnNuevoCliente_click""><i class=""fa fa-plus-circle""></i>Nuevo Cliente</button>
                        </div>
                    </div>
                    <div class=""row"">
                        <div class=""col-lg-12"">
                            <div class=""table-responsive"">
                                <table class=""table table-hover"">
                                    <thead>
                                        <tr>
                                            <th>NOMBRE</th>
                                            <th>EDAD</th>
                                            <th>FECHA NACIMIENTO</th>
                                            <th>SEXO</th>
                                            <th>TELEFONO</th>
                                            <th>EMAIL</th>
                                            <th>NUM PASAPORTE</th>
                                            <th></th>
                                        </tr>
                                    </thead>
");
            WriteLiteral(@"                                    <tbody>
                                        <tr v-for=""item in listaClientes"">
                                            <td>{{item.nombre}}</td>
                                            <td>{{item.edad}}</td>
                                            <td>{{item.fechaNacimiento | fechaCorta}}</td>
                                            <td>{{item.sexo}}</td>
                                            <td>{{item.telefono}}</td>
                                            <td>{{item.email}}</td>
                                            <td>{{item.numeroPasaporte}}</td>
                                            <td nowrap>
                                                <button type=""button"" class=""btn waves-effect waves-light btn-outline-info btn-sm"" ");
            WriteLiteral("@click=\"btnBuscarCliente_click(item.id)\">Editar</button>\n                                                <button type=\"button\" class=\"btn waves-effect waves-light btn-outline-danger btn-sm\" ");
            WriteLiteral(@"@click=""btnEliminarCliente_click(item)"">Eliminar</button>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
");
            WriteLiteral(@"    <el-dialog title=""Cliente"" :visible.sync=""mostrarDialog"">
        <el-form :model=""cliente"" ref=""cliente"" :rules=""rulesCliente"">
            <div class=""row"">
                <div class=""col-lg-6"">
                    <el-form-item label=""Nombre"" prop=""nombre"">
                        <el-input v-model=""cliente.nombre""></el-input>
                    </el-form-item>
                </div>
                <div class=""col-lg-6"">
                    <el-form-item label=""Edad"" prop=""edad"">
                        <el-input v-model.number=""cliente.edad"" v-on:change=""txtEdad_change""></el-input>
                    </el-form-item>
                </div>
            </div>
            <div class=""row"">
                <div class=""col-lg-6"">
                    <el-form-item label=""Fecha de Nacimiento"" prop=""fechaNacimiento"">
                        <el-date-picker type=""date"" format=""dd-MM-yyyy"" placeholder=""Fecha"" v-model=""cliente.fechaNacimiento"" style=""width: 100%;""></el-date-picker>
                    </el-f");
            WriteLiteral(@"orm-item>
                </div>
                <div class=""col-lg-6"">
                    <el-form-item label=""Sexo"" prop=""sexo"">
                        <br />
                        <el-radio-group v-model=""cliente.sexo"">
                            <el-radio label=""H"">Hombre</el-radio>
                            <el-radio label=""M"">Mujer</el-radio>
                        </el-radio-group>
                    </el-form-item>
                </div>
            </div>
            <div class=""row"">
                <div class=""col-lg-6"">
                    <el-form-item label=""Teléfono"" prop=""telefono"">
                        <el-input v-model=""cliente.telefono""></el-input>
                    </el-form-item>
                </div>
                <div class=""col-lg-6"">
                    <el-form-item label=""Email"" prop=""email"">
                        <el-input v-model=""cliente.email""></el-input>
                    </el-form-item>
                </div>
            </div>
            <div class=""row""");
            WriteLiteral(@">
                <div class=""col-lg-6"">
                    <el-form-item label=""Número Pasaporte"" prop=""numeroPasaporte"">
                        <el-input v-model=""cliente.numeroPasaporte""></el-input>
                    </el-form-item>
                </div>
                <div class=""col-lg-6"">
                    <el-form-item label=""Nombre Doctor"" prop=""nombreDoctor"">
                        <el-input v-model=""cliente.nombreDoctor""></el-input>
                    </el-form-item>
                </div>
            </div>
        </el-form>
        <span slot=""footer"" class=""dialog-footer"">
            <el-button ");
            WriteLiteral("@click=\"mostrarDialog = false\">Cancelar</el-button>\n            <el-button type=\"primary\" ");
            WriteLiteral("@click=\"btnGuardar_click\">{{cliente.id === -1 ? \'Agregar\' : \'Actualizar\'}}</el-button>\n        </span>\n    </el-dialog>\n</div>\n\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        var app = new Vue({
            el: '#Clientes',
            data: {
                cliente: {
                    id: null,
                    nombre: null,
                    edad: null,
                    fechaNacimiento: new Date(),
                    sexo: null,
                    telefono: null,
                    nombreDoctor: null,
                    email: null,
                    numeroPasaporte: null,
                    usuario: null
                },
                mostrarDialog: false,
                rulesCliente: {
                    nombre: { required: true, message: 'El nombre es requerido.', trigger: 'blur' },
                    edad: [
                        { required: true, message: 'La edad es requerida', trigger: 'blur' },
                        { type: 'number', message: 'La edad debe ser numérica' }
                    ],
                    fechaNacimiento: { required: true, message: 'La fecha de nacimiento es requerida', trigger: 'change' },
   ");
                WriteLiteral(@"                 sexo: { required: true, message: 'El sexo es requerido', trigger: 'change' }
                },
                listaClientes: []
            },
            methods: {
                btnNuevoCliente_click: function () {
                    this.cliente = {
                        id: -1,
                        nombre: null,
                        edad: null,
                        fechaNacimiento: new Date(),
                        sexo: null,
                        telefono: null,
                        nombreDoctor: null,
                        email: null,
                        numeroPasaporte: null,
                        usuario: null
                    }

                    this.mostrarDialog = true;
                },
                btnGuardar_click: function () {
                    console.log('dio click');
                    this.$refs['cliente'].validate((valid) => {
                        if (valid) {
                            try {
                              ");
                WriteLiteral("  axios.post(\'");
#nullable restore
#line 186 "/Users/neftalirodriguez/Projects/LaboratoriosDelCaribe/LabCaribeWeb/Areas/Catalogos/Views/Clientes/Index.cshtml"
                                       Write(Url.Action("SetCliente", "Clientes"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"', this.cliente).then(response => {
                                    if (response.data === 'ok') {
                                        this.mostrarDialog = false

                                        this.cliente = {
                                            id: -1,
                                            nombre: null,
                                            edad: null,
                                            fechaNacimiento: null,
                                            sexo: null,
                                            telefono: null,
                                            nombreDoctor: null,
                                            email: null,
                                            numeroPasaporte: null,
                                            usuario: null
                                        }

                                        this.getClientes()

                                        this.$message.success('Los datos del cliente se han guardad");
                WriteLiteral(@"o.');
                                    } else {
                                        this.$message.error(response.data);
                                    }
                                }).catch(e => {
                                    this.$message.error(e);
                                });
                            } catch (error) {
                                this.$message.error(error);
                            }
                        } else {
                            return false;
                        }
                    });
                },
                getClientes: function () {
                    axios.get('");
#nullable restore
#line 221 "/Users/neftalirodriguez/Projects/LaboratoriosDelCaribe/LabCaribeWeb/Areas/Catalogos/Views/Clientes/Index.cshtml"
                          Write(Url.Action("GetListaClientes", "Clientes"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"').then(response => {
                        this.listaClientes = response.data;
                    }).catch(e => {
                        this.$message.error('No se han podido cargar los Clientes.');
                    });
                },
                txtEdad_change: function (value) {
                    try {
                        if (this.cliente.id === -1) {
                            let fechaActual = new Date();
                            let anio = fechaActual.getFullYear() - parseInt(value)

                            this.cliente.fechaNacimiento = new Date(anio, 1, 1);
                        }
                    } catch { }
                },
                btnBuscarCliente_click: function (id) {
                    axios.get('");
#nullable restore
#line 238 "/Users/neftalirodriguez/Projects/LaboratoriosDelCaribe/LabCaribeWeb/Areas/Catalogos/Views/Clientes/Index.cshtml"
                          Write(Url.Action("GetCliente", "Clientes"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"?idCliente=' + id).then(response => {
                            this.cliente = response.data
                            this.mostrarDialog = true;
                        }).catch(e => {
                            this.$message.error('Error al obtener el usuario.');
                        });
                },
                btnEliminarCliente_click: function (item) {
                    this.$confirm('El cliente ' + item.nombre + ' se eliminará permanentemente. ¿Desea continuar?', 'Confirmar', {
                        confirmButtonText: 'Si',
                        cancelButtonText: 'No',
                        type: 'warning'
                    }).then(() => {
                        try {
                            axios.delete('");
#nullable restore
#line 252 "/Users/neftalirodriguez/Projects/LaboratoriosDelCaribe/LabCaribeWeb/Areas/Catalogos/Views/Clientes/Index.cshtml"
                                     Write(Url.Action("SetEliminarCliente", "Clientes"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"?idCliente=' + item.id).then(response => {
                                if (response.data === ""ok"") {
                                    this.getClientes();

                                    this.$message({
                                        type: 'success',
                                        message: 'El cliente ' + item.nombre + ' se ha eliminado'
                                    });
                                } else {
                                    this.$message.error(response.data);
                                }
                            }).catch(e => {
                                this.$message.error('Error al eliminar el cliente.');
                            });
                        } catch (error) {
                            this.$message.error(error);
                        }
                    }).catch(() => {
                        this.$message({
                            type: 'info',
                            message: 'Proceso cancelado.'
     ");
                WriteLiteral("                   });\n                    });\n                }\n            },\n            mounted: function () {\n                this.getClientes()\n            }\n        });</script>\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
